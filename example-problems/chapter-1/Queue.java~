

public class Queue<Item>
{
    private Node first; //link to least recently added node
    private Node last; //link to most recently added node
    private int n;

    private class Node
    {
	Item item;
	Node next;
    }

    public boolean isEmpty() { return first == null; }
    public int size() { return n; }

    public void enqueue( Item item)
    { //Add item to end of the list
	Node oldlast = last;
	last = new Node();
	last.item = item;
	last.next = null;
	if (isEmpty()) first = last;
	else oldlast.next = last;
	n++;
    }

    public Item dequeue()
    { //Remove item from the beginning of the list
	Item item = first.item;
	first = first.next;
	n--;
	if (isEmpty()) last = null;
	return item;
    }


    public static void main(String[] args)
    {
	Queue<String> collection = new Queue<String>();
	collection.dequeue();
    }
}
	

	
       
